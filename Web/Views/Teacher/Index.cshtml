@model IEnumerable<FbcBookIt.Entity.Student>

@{
    ViewBag.Title = "Request Books";
}
<style>
    table#bookResults {
        font-family: verdana,arial,sans-serif;
        font-size: 11px;
        color: #333333;
        border: 1px solid #999999;
        border-collapse: collapse;
    }

        table#bookResults th {
            background: #b5cfd2 url('cell-blue.jpg');
            padding: 8px;
            border: 1px solid #999999;
        }

        table#bookResults td {
            background: #dcddc0 url('cell-grey.jpg');
            padding: 8px;
            border: 1px solid #999999;
        }
</style>
<h2>@ViewBag.Title</h2>

<div id="studentList">
    @Html.Partial("_BookRequest", new FbcBookIt.Entity.Title())
</div>

@Html.Partial("_studentList", Model)

@section scripts
{

    <script>
        $(document).ready(function () {
            $('#bookRequestModal').modal('hide');
            $('#studentList').on('click', '.pickStudent', function (e) {
                if (e.button !== 0) {
                    return; // not a left click
                }
                var that = $(this);
                var tr = that.closest('tr');
                var studentId = tr.data('id');
                // do something

                $('#StudentID').val(studentId);
            });
        });

        $('#releaseStudent').on('click', function () {
            var that = $(this);
            var tr = that.closest('tr');
            var studentID = tr.data('id');

            $.ajax({
                type: 'POST',
                url: '/Teacher/ReleaseStudent',
                data: { "StudentID": studentID },
                datatype: 'json',
                success: function (result) {
                    if (result) {
                        //
                    }
                }
            });
        });

        $(document).on('click', '.pickStudent', function (e) {
            if (e.button !== 0) {
                return; // not a left click
            }

            var that = $(this);
            var tr = that.closest('tr');
            $('#modalStudentID').val(tr.data('id'));
            $('#bookRequestModal').modal('show');
        });

        $('#bookRequestModal').on('shown.bs.modal', function () {
            $('#ISBN').focus();
        })

        $('#Close').on('click', function () {
            $(this).closest('form')[0].reset();
            $('#cover').attr('src', '#');
            $('#bookResults').empty();
        });

        $('#Search').on('click', function () {
            var isbn = $('#ISBN10').val();
            var searchType = 'isbn';
            $('#bookResults').empty();
            if (isbn) {

            }
            else {
                searchType = 'intitle'
                isbn = $('#Name').val();
            }

            $.ajax({
                type: "GET",
                url: 'https://www.googleapis.com/books/v1/volumes?q=' + searchType + ':' + encodeURIComponent(isbn),
                datatype: 'json',
                success: function (result) {
                    if (result) {


                        if (searchType == 'isbn') {
                            $('#ISBN13').val((result.items[0].volumeInfo.industryIdentifiers[1].identifier == null) ? '0' : result.items[0].volumeInfo.industryIdentifiers[1].identifier);
                            $('#Name').val((result.items[0].volumeInfo.title == null) ? '0' : result.items[0].volumeInfo.title);
                            $('#cover').attr('src', (result.items[0].volumeInfo.imageLinks.thumbnail == null) ? '0' : result.items[0].volumeInfo.imageLinks.thumbnail);
                            $('#tts').val((result.items[0].accessInfo.textToSpeechPermission == null) ? '0' : result.items[0].accessInfo.textToSpeechPermission);
                            $('#Publisher').val((result.items[0].volumeInfo.publisher == null) ? '0' : result.items[0].volumeInfo.publisher);
                            $('#Author').val((result.items[0].volumeInfo.authors == null) ? '0' : result.items[0].volumeInfo.authors);
                        }
                        else {
                            $.each(result.items, function (i, item) {                                
                                var $tr = $('<tr>').append(
                                    $('<td>').text((item.volumeInfo.title == null) ? '0' : item.volumeInfo.title),
                                    $('<td>').text((item.volumeInfo.industryIdentifiers[0].identifier == null) ? '0' : item.volumeInfo.industryIdentifiers[0].identifier),
                                    $('<td>').text((item.accessInfo.textToSpeechPermission == null) ? '0' : item.accessInfo.textToSpeechPermission)
                                ).appendTo('#bookResults');
                            });
                        }
                    }
                    else
                    {
                        toastr.error("No search results found.")
                    }
                    $('#books').removeClass('hidden');
                }
            });
        });
    </script>
}