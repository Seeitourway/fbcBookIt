//-----------------------------------------------------------------------------
// <auto-generated> 
// ^^^ Comment out the above line to allow ReSharper to validate the 
//  using clauses.
//	This code was generated from a template.
//
//	Manual changes to this file may cause unexpected behavior in your 
//	application.
//	Manual changes to this file will be overwritten if the code is 
//	regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------

namespace FbcBookIt.Entity
{
	using System;
	using System.ComponentModel.DataAnnotations;
	using System.Data.Entity.ModelConfiguration;
	using System.ComponentModel.DataAnnotations.Schema;
	//using AWEFramework.AWEExtensions;
	using FbcBookIt.Utility;
	using System.Collections.Generic;
	
	// Table Name: FormatType
	public partial class FormatType: BASE_Entity
	{
		// Primary Keys
		public System.Guid FormatTypeId { get; set; }
	
		// Non-Primary columns
		public System.Boolean Active { get; set; }
		public System.String FormatDescription { get; set; }
	
	}
	
	public class FormatTypeMap: EntityTypeConfiguration<FormatType>
	{
		public FormatTypeMap()
		{
			// Map entity to table
			ToTable("FormatType");
	
			// Map property to column
			Property(t => t.Active).HasColumnName("Active");
			Property(t => t.FormatDescription).HasColumnName("FormatDescription");
			Property(t => t.FormatTypeId).HasColumnName("FormatTypeId");
	
			// Primary Key
			HasKey(t => t.FormatTypeId);
	
			// Additional property mappings
			Property(t => t.Active)
				.IsRequired();
	
			Property(t => t.FormatDescription)
				.IsRequired();
	
			Property(t => t.FormatTypeId)
				.IsRequired();
	
	
		}
	}
	
	public static partial class FormatTypeHelper
	{
		public static void AssignNewPK
			(this FormatType aFormatType)
		{
			aFormatType.FormatTypeId = Guid.NewGuid().CombGuid();
		}
	
		/// <summary> 
		/// This code is fragile in that is ASSUMES that integer primary keys ARE
		/// AUTO-INCREMENTING columns whose value is governed by the database 
		/// server and that Guid primary keys are NOT "computed" values but rather 
		/// those whose column value is set by the client and/or server in a 
		/// fashion NOT governed by the database server.
		/// </summary>
		public static bool IsNew
			(this FormatType aFormatType)
		{
			if (aFormatType == null)
			{
				throw 
					new ArgumentNullException
						(
							"aFormatType"
							, "Entity instance cannot be null!"
						);
			}
			bool vResult = 
				(aFormatType.FormatTypeId == Guid.Empty);
			return vResult;
		}
	
		public static void AssignTo
			(FormatType aFrom, FormatType aTo)
		{
			aTo.Active = aFrom.Active;
			aTo.FormatDescription = aFrom.FormatDescription;
			aTo.FormatTypeId = aFrom.FormatTypeId;
		}
	
		public static void AssignToNoPrimaryKeys
			(FormatType aFrom, FormatType aTo)
		{
			aTo.Active = aFrom.Active;
			aTo.FormatDescription = aFrom.FormatDescription;
		}
	
		public static void AssignToJustPrimaryKeys
			(FormatType aFrom, FormatType aTo)
		{
			aTo.FormatTypeId = aFrom.FormatTypeId;
		}
	
		public static void AssignFrom
			(this FormatType aTo, FormatType aFrom)
		{
			aTo.Active = aFrom.Active;
			aTo.FormatDescription = aFrom.FormatDescription;
			aTo.FormatTypeId = aFrom.FormatTypeId;
		}
	
		public static void AssignFromNoPrimaryKeys
			(this FormatType aTo, FormatType aFrom)
		{
			aTo.Active = aFrom.Active;
			aTo.FormatDescription = aFrom.FormatDescription;
		}
	
		public static void AssignFromJustPrimaryKeys
			(this FormatType aTo, FormatType aFrom)
		{
			aTo.FormatTypeId = aFrom.FormatTypeId;
		}
	
	}
}
