//-----------------------------------------------------------------------------
// <auto-generated> 
// ^^^ Comment out the above line to allow ReSharper to validate the 
//  using clauses.
//	This code was generated from a template.
//
//	Manual changes to this file may cause unexpected behavior in your 
//	application.
//	Manual changes to this file will be overwritten if the code is 
//	regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------

namespace FbcBookIt.Entity
{
	using System;
	using System.ComponentModel.DataAnnotations;
	using System.Data.Entity.ModelConfiguration;
	using System.ComponentModel.DataAnnotations.Schema;
	//using AWEFramework.AWEExtensions;
	using FbcBookIt.Utility;
	using System.Collections.Generic;
	
	// Table Name: BookLoan
	public partial class BookLoan: BASE_Entity
	{
		// Primary Keys
		public System.Guid BookLoanId { get; set; }
	
		// Non-Primary columns
		// Foreign Key to BookRequest
		public System.Guid BookRequestID { get; set; }
		// Foreign Key to Copy
		public System.Guid CopyID { get; set; }
		public System.DateTime? InDate { get; set; }
		public System.DateTime? OutDate { get; set; }
		// Foreign Key to LoanStatus
		public System.Int32 StatusID { get; set; }
	
	}
	
	public class BookLoanMap: EntityTypeConfiguration<BookLoan>
	{
		public BookLoanMap()
		{
			// Map entity to table
			ToTable("BookLoan");
	
			// Map property to column
			Property(t => t.BookLoanId).HasColumnName("BookLoanId");
			Property(t => t.BookRequestID).HasColumnName("BookRequestID");
			Property(t => t.CopyID).HasColumnName("CopyID");
			Property(t => t.InDate).HasColumnName("InDate");
			Property(t => t.OutDate).HasColumnName("OutDate");
			Property(t => t.StatusID).HasColumnName("StatusID");
	
			// Primary Key
			HasKey(t => t.BookLoanId);
	
			// Additional property mappings
			Property(t => t.BookLoanId)
				.IsRequired();
	
			Property(t => t.BookRequestID)
				.IsRequired();
	
			Property(t => t.CopyID)
				.IsRequired();
	
			Property(t => t.StatusID)
				.IsRequired();
	
	
		}
	}
	
	public static partial class BookLoanHelper
	{
		public static void AssignNewPK
			(this BookLoan aBookLoan)
		{
			aBookLoan.BookLoanId = Guid.NewGuid().CombGuid();
		}
	
		/// <summary> 
		/// This code is fragile in that is ASSUMES that integer primary keys ARE
		/// AUTO-INCREMENTING columns whose value is governed by the database 
		/// server and that Guid primary keys are NOT "computed" values but rather 
		/// those whose column value is set by the client and/or server in a 
		/// fashion NOT governed by the database server.
		/// </summary>
		public static bool IsNew
			(this BookLoan aBookLoan)
		{
			if (aBookLoan == null)
			{
				throw 
					new ArgumentNullException
						(
							"aBookLoan"
							, "Entity instance cannot be null!"
						);
			}
			bool vResult = 
				(aBookLoan.BookLoanId == Guid.Empty);
			return vResult;
		}
	
		public static void AssignTo
			(BookLoan aFrom, BookLoan aTo)
		{
			aTo.BookLoanId = aFrom.BookLoanId;
			aTo.BookRequestID = aFrom.BookRequestID;
			aTo.CopyID = aFrom.CopyID;
			aTo.InDate = aFrom.InDate;
			aTo.OutDate = aFrom.OutDate;
			aTo.StatusID = aFrom.StatusID;
		}
	
		public static void AssignToNoPrimaryKeys
			(BookLoan aFrom, BookLoan aTo)
		{
			aTo.BookRequestID = aFrom.BookRequestID;
			aTo.CopyID = aFrom.CopyID;
			aTo.InDate = aFrom.InDate;
			aTo.OutDate = aFrom.OutDate;
			aTo.StatusID = aFrom.StatusID;
		}
	
		public static void AssignToJustPrimaryKeys
			(BookLoan aFrom, BookLoan aTo)
		{
			aTo.BookLoanId = aFrom.BookLoanId;
		}
	
		public static void AssignFrom
			(this BookLoan aTo, BookLoan aFrom)
		{
			aTo.BookLoanId = aFrom.BookLoanId;
			aTo.BookRequestID = aFrom.BookRequestID;
			aTo.CopyID = aFrom.CopyID;
			aTo.InDate = aFrom.InDate;
			aTo.OutDate = aFrom.OutDate;
			aTo.StatusID = aFrom.StatusID;
		}
	
		public static void AssignFromNoPrimaryKeys
			(this BookLoan aTo, BookLoan aFrom)
		{
			aTo.BookRequestID = aFrom.BookRequestID;
			aTo.CopyID = aFrom.CopyID;
			aTo.InDate = aFrom.InDate;
			aTo.OutDate = aFrom.OutDate;
			aTo.StatusID = aFrom.StatusID;
		}
	
		public static void AssignFromJustPrimaryKeys
			(this BookLoan aTo, BookLoan aFrom)
		{
			aTo.BookLoanId = aFrom.BookLoanId;
		}
	
	}
}
