//-----------------------------------------------------------------------------
// <auto-generated> 
// ^^^ Comment out the above line to allow ReSharper to validate the 
//  using clauses.
//	This code was generated from a template.
//
//	Manual changes to this file may cause unexpected behavior in your 
//	application.
//	Manual changes to this file will be overwritten if the code is 
//	regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------

namespace FbcBookIt.Entity
{
	using System;
	using System.ComponentModel.DataAnnotations;
	using System.Data.Entity.ModelConfiguration;
	using System.ComponentModel.DataAnnotations.Schema;
	//using AWEFramework.AWEExtensions;
	using FbcBookIt.Utility;
	using System.Collections.Generic;
	
	// Table Name: LoanStatus
	public partial class LoanStatu: BASE_Entity
	{
		// Primary Keys
		public System.Int32 LoanStatusId { get; set; }
	
		// Non-Primary columns
		public System.String StatusDescription { get; set; }
	
	}
	
	public class LoanStatuMap: EntityTypeConfiguration<LoanStatu>
	{
		public LoanStatuMap()
		{
			// Map entity to table
			ToTable("LoanStatus");
	
			// Map property to column
			Property(t => t.LoanStatusId).HasColumnName("LoanStatusId");
			Property(t => t.StatusDescription).HasColumnName("StatusDescription");
	
			// Primary Key
			HasKey(t => t.LoanStatusId);
	
			// Additional property mappings
			Property(t => t.LoanStatusId)
				.IsRequired();
	
	
		}
	}
	
	public static partial class LoanStatuHelper
	{
		public static void AssignNewPK
			(this LoanStatu aLoanStatu)
		{
		}
	
		/// <summary> 
		/// This code is fragile in that is ASSUMES that integer primary keys ARE
		/// AUTO-INCREMENTING columns whose value is governed by the database 
		/// server and that Guid primary keys are NOT "computed" values but rather 
		/// those whose column value is set by the client and/or server in a 
		/// fashion NOT governed by the database server.
		/// </summary>
		public static bool IsNew
			(this LoanStatu aLoanStatu)
		{
			if (aLoanStatu == null)
			{
				throw 
					new ArgumentNullException
						(
							"aLoanStatu"
							, "Entity instance cannot be null!"
						);
			}
			bool vResult = 
				(aLoanStatu.LoanStatusId < 1);
			return vResult;
		}
	
		public static void AssignTo
			(LoanStatu aFrom, LoanStatu aTo)
		{
			aTo.LoanStatusId = aFrom.LoanStatusId;
			aTo.StatusDescription = aFrom.StatusDescription;
		}
	
		public static void AssignToNoPrimaryKeys
			(LoanStatu aFrom, LoanStatu aTo)
		{
			aTo.StatusDescription = aFrom.StatusDescription;
		}
	
		public static void AssignToJustPrimaryKeys
			(LoanStatu aFrom, LoanStatu aTo)
		{
			aTo.LoanStatusId = aFrom.LoanStatusId;
		}
	
		public static void AssignFrom
			(this LoanStatu aTo, LoanStatu aFrom)
		{
			aTo.LoanStatusId = aFrom.LoanStatusId;
			aTo.StatusDescription = aFrom.StatusDescription;
		}
	
		public static void AssignFromNoPrimaryKeys
			(this LoanStatu aTo, LoanStatu aFrom)
		{
			aTo.StatusDescription = aFrom.StatusDescription;
		}
	
		public static void AssignFromJustPrimaryKeys
			(this LoanStatu aTo, LoanStatu aFrom)
		{
			aTo.LoanStatusId = aFrom.LoanStatusId;
		}
	
	}
}
